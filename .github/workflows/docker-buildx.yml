name: docker-buildx

on:
  push:
    branches:
      - 'v1.2'
  pull_request:

env:
  DOCKERHUB_USER: wiserain
  DOCKERHUB_REPO: libtorrent
  LIBTORRENT_VER: "1.2.12"

jobs:
  alpine310:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=distro::alpine3.10
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run Buildx Python2
        uses: ilteoood/docker_buildx@1.1.0
        with:
          imageName: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          tag: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py2
          dockerFile: ${{ steps.vars.outputs.distro }}/Dockerfile
          buildArg: LIBTORRENT_VER=${{ env.LIBTORRENT_VER }},PY_MAJOR_VER=2
          publish: true
          platform: linux/amd64,linux/arm/v7,linux/arm64
          dockerUser: ${{ env.DOCKERHUB_USER }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASS }}
      - 
        name: Run Buildx Python3
        run : |
          docker buildx build \
            -t ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py3 \
            --build-arg LIBTORRENT_VER=${{ env.LIBTORRENT_VER }} \
            --build-arg PY_MAJOR_VER=3 \
            --platform=linux/amd64,linux/arm/v7,linux/arm64 \
            --push \
            -f ${{ steps.vars.outputs.distro }}/Dockerfile \
            ${{ steps.vars.outputs.distro }}/.
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags:
              - ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py2
              - ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py3

  alpine311:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=distro::alpine3.11
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run Buildx Python2
        uses: ilteoood/docker_buildx@1.1.0
        with:
          imageName: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          tag: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py2
          dockerFile: ${{ steps.vars.outputs.distro }}/Dockerfile
          buildArg: LIBTORRENT_VER=${{ env.LIBTORRENT_VER }},PY_MAJOR_VER=2
          publish: true
          platform: linux/amd64,linux/arm/v7,linux/arm64
          dockerUser: ${{ env.DOCKERHUB_USER }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASS }}
      - 
        name: Run Buildx Python3
        run : |
          docker buildx build \
            -t ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}:${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py3 \
            --build-arg LIBTORRENT_VER=${{ env.LIBTORRENT_VER }} \
            --build-arg PY_MAJOR_VER=3 \
            --platform=linux/amd64,linux/arm/v7,linux/arm64 \
            --push \
            -f ${{ steps.vars.outputs.distro }}/Dockerfile \
            ${{ steps.vars.outputs.distro }}/.
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags:
              - ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py2
              - ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py3

  alpine312:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=distro::alpine3.12
          echo ::set-output name=pymver::3
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run Buildx
        uses: ilteoood/docker_buildx@1.1.0
        with:
          imageName: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          tag: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}
          dockerFile: ${{ steps.vars.outputs.distro }}/Dockerfile
          buildArg: LIBTORRENT_VER=${{ env.LIBTORRENT_VER }},PY_MAJOR_VER=${{ steps.vars.outputs.pymver }}
          publish: true
          platform: linux/amd64,linux/arm/v7,linux/arm64
          dockerUser: ${{ env.DOCKERHUB_USER }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}

  ubuntu1804:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=distro::ubuntu18.04
          echo ::set-output name=pymver::3
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run Buildx
        uses: ilteoood/docker_buildx@1.1.0
        with:
          imageName: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          tag: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}
          dockerFile: ${{ steps.vars.outputs.distro }}/Dockerfile
          buildArg: LIBTORRENT_VER=${{ env.LIBTORRENT_VER }},PY_MAJOR_VER=${{ steps.vars.outputs.pymver }}
          publish: true
          platform: linux/amd64,linux/arm/v7,linux/arm64
          dockerUser: ${{ env.DOCKERHUB_USER }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}

  ubuntu2004:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=distro::ubuntu20.04
          echo ::set-output name=pymver::3
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run Buildx
        uses: ilteoood/docker_buildx@1.1.0
        with:
          imageName: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          tag: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}
          dockerFile: ${{ steps.vars.outputs.distro }}/Dockerfile
          buildArg: LIBTORRENT_VER=${{ env.LIBTORRENT_VER }},PY_MAJOR_VER=${{ steps.vars.outputs.pymver }}
          publish: true
          platform: linux/amd64,linux/arm/v7,linux/arm64
          dockerUser: ${{ env.DOCKERHUB_USER }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}

  ubuntu2010:
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=distro::ubuntu20.10
          echo ::set-output name=pymver::3
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Run Buildx
        uses: ilteoood/docker_buildx@1.1.0
        with:
          imageName: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
          tag: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}
          dockerFile: ${{ steps.vars.outputs.distro }}/Dockerfile
          buildArg: LIBTORRENT_VER=${{ env.LIBTORRENT_VER }},PY_MAJOR_VER=${{ steps.vars.outputs.pymver }}
          publish: true
          platform: linux/amd64,linux/arm/v7,linux/arm64
          dockerUser: ${{ env.DOCKERHUB_USER }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.distro }}-py${{ steps.vars.outputs.pymver }}

  make-release:
    needs:
      - alpine310
      - alpine311
      - alpine312
      - ubuntu1804
      - ubuntu2004
      - ubuntu2010
    runs-on: ubuntu-20.04
    if: (github.event_name != 'watch') || (github.actor == github.event.repository.owner.login)
    steps:
      - 
        name: Load Variables
        id: vars
        run: |
          echo ::set-output name=date::$(date -u +'%y%m%d')
          echo ::set-output name=tags::"alpine3.10-py2 alpine3.10-py3 alpine3.11-py2 alpine3.11-py3 alpine3.12-py3 ubuntu18.04-py3 ubuntu20.04-py3 ubuntu20.10-py3"
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Generate Release Assets
        run: |
          chmod +x ./release.sh
          ./release.sh ${{ env.LIBTORRENT_VER }} "${{ steps.vars.outputs.tags }}"
      - 
        name: Create Release
        id: create_release
        if: (github.event_name != 'pull_request')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.date }}
          release_name: libtorrent-${{ env.LIBTORRENT_VER }}-${{ steps.vars.outputs.date }}
          body: Auto-generated release
          draft: true
          prerelease: false
      - 
        name: Upload Assets to Release with a wildcard
        if: (github.event_name != 'pull_request')
        uses: csexton/release-asset-action@v2
        with:
          pattern: "release/*.tar.gz"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ steps.create_release.outputs.upload_url }}
      -
        name: Send Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            Image: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
            Tags: ${{ steps.vars.outputs.tags }}
